<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GDScriptについて on Godot Japan</title>
    <link>https://godot-japan.com/reference/gdscript%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
    <description>Recent content in GDScriptについて on Godot Japan</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 08 Feb 2023 23:05:38 +0900</lastBuildDate>
    <atom:link href="https://godot-japan.com/reference/gdscript%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GDScriptの基本</title>
      <link>https://godot-japan.com/reference/gdscript%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/gdscript%E3%81%AE%E5%9F%BA%E6%9C%AC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://godot-japan.com/reference/gdscript%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/gdscript%E3%81%AE%E5%9F%BA%E6%9C%AC/</guid>
      <description>&lt;p&gt;Godot Engineの組み込みスクリプト言語である&lt;code&gt;GDScript&lt;/code&gt;の基本的な使い方について記載します。&lt;/p&gt;&#xA;&lt;h1 id=&#34;基本的な記述方法&#34;&gt;基本的な記述方法&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Node&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; int_sanple &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; text_sample &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;文字列&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; int_sample2 :&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_ready&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;GDSCriptは、&lt;strong&gt;大まかに３種類の要素で読み書き&lt;/strong&gt;することができます。&lt;br&gt;&#xA;上記のサンプルを１行ずつ解説します。&lt;/p&gt;&#xA;&lt;h2 id=&#34;クラスの拡張&#34;&gt;クラスの拡張&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Node&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;extends Node&lt;/code&gt;は&lt;code&gt;Node&lt;/code&gt;という&lt;strong&gt;クラスの拡張&lt;/strong&gt;という意味です。&lt;br&gt;&#xA;&lt;code&gt;Node&lt;/code&gt;クラスが持つ機能をそのままに、新しいクラスを作ることになります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;変数&#34;&gt;変数&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; int_sample &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; text_sample &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;文字列&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;GDScriptは静的型付けの機能を持っています。&lt;br&gt;&#xA;多くの言語は型を明示的に指定する必要がありますが、GDScriptは自動的に型を割り付けます。&lt;/p&gt;&#xA;&lt;p&gt;これによりユーザーは型をあまり意識せずにプログラムを書くことができます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;明示的な型付け&#34;&gt;明示的な型付け&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; int_sample2 :&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;型を意識したい場合もありますので、上記のように明示的に型を指定することもできます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;関数&#34;&gt;関数&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_ready&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;GDScriptの関数は&lt;code&gt;func&lt;/code&gt;にスペースを空けて関数名を記述します。&lt;br&gt;&#xA;多くの言語のように&lt;code&gt;{ }&lt;/code&gt;でブロックを作るのではなく、&lt;code&gt;:&lt;/code&gt;のあとの&lt;strong&gt;インデント&lt;/strong&gt;でブロックを作る構文になります。&lt;/p&gt;&#xA;&lt;p&gt;関数にはクラスがもともと持っている&lt;strong&gt;組み込み関数&lt;/strong&gt;と、ユーザーが作る&lt;strong&gt;独自関数&lt;/strong&gt;の２種類があります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>一定時間待って処理する</title>
      <link>https://godot-japan.com/reference/gdscript%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/%E4%B8%80%E5%AE%9A%E6%99%82%E9%96%93%E5%BE%85%E3%81%A3%E3%81%A6%E5%87%A6%E7%90%86%E3%81%99%E3%82%8B/</link>
      <pubDate>Wed, 08 Feb 2023 21:57:32 +0900</pubDate>
      <guid>https://godot-japan.com/reference/gdscript%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/%E4%B8%80%E5%AE%9A%E6%99%82%E9%96%93%E5%BE%85%E3%81%A3%E3%81%A6%E5%87%A6%E7%90%86%E3%81%99%E3%82%8B/</guid>
      <description>&lt;p&gt;&lt;strong&gt;一定時間待って処理したい&lt;/strong&gt;場合の実装方法はいくつかあります。&lt;/p&gt;&#xA;&lt;h1 id=&#34;カウンターを使って処理する&#34;&gt;カウンターを使って処理する&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;_process()&lt;/code&gt;または&lt;code&gt;_physics_process&lt;/code&gt;でカウンター変数に数値を足していき、特定の値になったら処理を実行する方法です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; counter:&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_process&lt;/span&gt;(_delta):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    counter &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; _counter &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;do something&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;加算でも減算でも構いませんが、一度しか使用しない場合は変数をむやみに増やしてしまう事がデメリットです。&lt;/p&gt;&#xA;&lt;h1 id=&#34;タイマーノードを使って処理する&#34;&gt;タイマーノードを使って処理する&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;Timer&lt;/code&gt;ノードは、指定した時間でシグナルを発行するノードになります。&lt;br&gt;&#xA;シグナルを受け取ることで特定の処理を行う事ができます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@onready&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; timer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;$Timer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_ready&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;timer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timeout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;connect&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;func&lt;/span&gt;(): print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;timer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;one_shot &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;timer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;one_shot&lt;/code&gt;を&lt;code&gt;true&lt;/code&gt;にしないと、指定した時間で設定したメソッドが繰り返し実行されます。&lt;br&gt;&#xA;時間で指定するため、フレーム単位での指定はできません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Engine.get_frames_per_second()&lt;/code&gt;で&lt;code&gt;fps&lt;/code&gt;を取得して&lt;code&gt;1/fps&lt;/code&gt;とすることで1フレームを実現することはできますが、フレームレートが可変の場合は不安定になるため、時間で指定することをおすすめします。&lt;/p&gt;&#xA;&lt;h1 id=&#34;コルーチンを使って処理する&#34;&gt;コルーチンを使って処理する&lt;/h1&gt;&#xA;&lt;p&gt;シーンツリーに直接&lt;code&gt;one_shot&lt;/code&gt;で消える&lt;code&gt;Timer&lt;/code&gt;ノードを設定することも可能です。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_ready&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_tree&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;create_timer&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timeout&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;await&lt;/code&gt;を使用することで、シンプルに書く事ができますが、非同期処理ですので、処理の順番に注意する必要があります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; str_test:&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_ready&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_tree&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;create_timer&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timeout&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;str_test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_process&lt;/span&gt;(_delta):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(str_test)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 0.5秒以降でないとstr_testは空になっている。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更に詳しいawaitの使用方法は以下をご覧ください。&lt;/p&gt;&#xA;&lt;a href=&#34;https://zenn.dev/submax/articles/30433a77da3cca&#34; class=&#34;no-icon&#34; onMouseOver=&#34;this.style.opacity=&#39;0.9&#39;&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer”&#34;&gt;&#xA;        &lt;div class=&#34;card mb-3&#34;&gt;&#xA;            &lt;div class=&#34;row g-0&#34;&gt;&#xA;                &lt;div class=&#34;col-md-4&#34;&gt;&#xA;                    &lt;img src=&#34;https://godot-japan.com/og-base-w1200-v2_10860734162504005579_hu14930368832708200996.webp&#34;&gt;&#xA;                &lt;/div&gt;&#xA;                &lt;div class=&#34;col-md-8&#34;&gt;&#xA;                    &lt;div class=&#34;card-body&#34;&gt;&#xA;                        &lt;h5 class=&#34;card-title&#34;&gt;Godot 4 await構文&lt;/h5&gt;&#xA;                        &lt;p class=&#34;card-text text-dark&#34;&gt;submaxさんによる記事&lt;/p&gt;&#xA;                    &lt;/div&gt;&#xA;                &lt;/div&gt;&#xA;            &lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;        &lt;/a&gt;</description>
    </item>
    <item>
      <title>数値について</title>
      <link>https://godot-japan.com/reference/gdscript%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/%E6%95%B0%E5%80%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://godot-japan.com/reference/gdscript%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/%E6%95%B0%E5%80%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>&lt;h1 id=&#34;数値の基本&#34;&gt;数値の基本&lt;/h1&gt;&#xA;&lt;p&gt;数値の型は、主に&lt;code&gt;int&lt;/code&gt;型と&lt;code&gt;float&lt;/code&gt;型になります。&lt;br&gt;&#xA;単純に言えば、&lt;code&gt;int&lt;/code&gt;は整数で、&lt;code&gt;float&lt;/code&gt;は小数点のある数字（実数）です。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;int&lt;/code&gt;型の場合、64bitの数値として、&lt;code&gt;-9223372036854775807 〜 9223372036854775807&lt;/code&gt;までの数値を扱う事ができます。&lt;br&gt;&#xA;&lt;code&gt;float&lt;/code&gt;型の場合、エンジン内の関数などでは32bitの浮動小数点値を使用しています。&lt;br&gt;&#xA;これは10進数の6桁になりますので、大きな数字を表現する場合は&lt;code&gt;int&lt;/code&gt;型として処理するほうが良いと思います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;数値の作成方法&#34;&gt;数値の作成方法&lt;/h2&gt;&#xA;&lt;p&gt;数値を作成するには数値リテラルを使用します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;整数の作成&#34;&gt;整数の作成&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value0 :&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value1 :&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 静的型付け&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;実数の作成&#34;&gt;実数の作成&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value0 :&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value1 :&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 静的型付け&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;数値に変換する方法&#34;&gt;数値に変換する方法&lt;/h2&gt;&#xA;&lt;p&gt;別の型を数値に変換（キャスト）する関数が用意されています。&lt;/p&gt;&#xA;&lt;h4 id=&#34;intクラスメソッド&#34;&gt;intクラスメソッド&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;メソッド名&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;説明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;int(bool)&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;bool&lt;/code&gt;型を&lt;code&gt;int&lt;/code&gt;型に変換します。&lt;code&gt;true&lt;/code&gt;なら&lt;code&gt;1&lt;/code&gt;に、&lt;code&gt;false&lt;/code&gt;なら&lt;code&gt;0&lt;/code&gt;に変換します。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;int(float)&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;float&lt;/code&gt;型を&lt;code&gt;int&lt;/code&gt;型に変換します。端数は切り捨てられますので、例えば&lt;code&gt;2.7&lt;/code&gt;の場合は&lt;code&gt;2&lt;/code&gt;に、&lt;code&gt;-0.7&lt;/code&gt;の場合は&lt;code&gt;0&lt;/code&gt;になります。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;int(String)&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;有効な&lt;code&gt;String&lt;/code&gt;型を&lt;code&gt;int&lt;/code&gt;型に変換します。すべて無効な文字列は無視され&lt;code&gt;0&lt;/code&gt;が返されます。例えば&lt;code&gt;&amp;quot;test1&amp;quot;&lt;/code&gt;の場合は&lt;code&gt;1&lt;/code&gt;に、&lt;code&gt;&amp;quot;1e3&amp;quot;&lt;/code&gt;の場合は&lt;code&gt;13&lt;/code&gt;になります。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;floatクラスメソッド&#34;&gt;floatクラスメソッド&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;メソッド名&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;説明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;float(bool)&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;bool&lt;/code&gt;型を&lt;code&gt;float&lt;/code&gt;型に変換します。&lt;code&gt;true&lt;/code&gt;なら&lt;code&gt;1.0&lt;/code&gt;に、&lt;code&gt;false&lt;/code&gt;なら&lt;code&gt;0.0&lt;/code&gt;に変換します。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;float(int)&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;int&lt;/code&gt;型を&lt;code&gt;float&lt;/code&gt;型に変換します。&lt;code&gt;1&lt;/code&gt;の場合は&lt;code&gt;1.0&lt;/code&gt;に変換されます。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;float(String)&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;有効な&lt;code&gt;String&lt;/code&gt;型を&lt;code&gt;float&lt;/code&gt;型に変換します。このメソッドは&lt;code&gt;float&lt;/code&gt;文字列（&lt;code&gt;&amp;quot;0.72&amp;quot;&lt;/code&gt;など）や指数表記文字列を受け入れるため、&lt;code&gt;1e3&lt;/code&gt;の場合は&lt;code&gt;1000.0&lt;/code&gt;になります。（&lt;code&gt;1e3 = 1×10の3乗 = 1000&lt;/code&gt;）&lt;br/&gt;それまで解析した結果を返して処理を終了するため、&lt;code&gt;1e3a2&lt;/code&gt;の場合は&lt;code&gt;1000.0&lt;/code&gt;となり、後半の&lt;code&gt;a2&lt;/code&gt;は無効となります。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;特殊な数値の表し方&#34;&gt;特殊な数値の表し方&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2進整数int型&#34;&gt;2進整数（int型）&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;0&lt;/code&gt;と&lt;code&gt;1&lt;/code&gt;で表す2進数ですが、Godot Engineでは、最終的に&lt;code&gt;int&lt;/code&gt;型として扱われます。&lt;br&gt;&#xA;例えば&lt;code&gt;0101&lt;/code&gt;という二進整数の場合、&lt;code&gt;0b0101&lt;/code&gt;と記述することができ、これを出力すると&lt;code&gt;5&lt;/code&gt;になります。&lt;br&gt;&#xA;逆に、&lt;code&gt;5&lt;/code&gt;を二進整数で表すと&lt;code&gt;0b0101&lt;/code&gt;になりますので、明示的な型の変換は必要はなく、整数を二進整数として演算することが可能です。&lt;/p&gt;&#xA;&lt;p&gt;二進整数（ビット）演算については別のページで詳しく解説します。&lt;/p&gt;&#xA;&lt;h2 id=&#34;16進整数int型&#34;&gt;16進整数（int型）&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;0～F&lt;/code&gt;までの1桁が&lt;code&gt;0~15&lt;/code&gt;まである数値です。Godot Engineでは、最終的に&lt;code&gt;int&lt;/code&gt;型として扱われます。&lt;br&gt;&#xA;例えば&lt;code&gt;FFF&lt;/code&gt;という16進整数の場合、&lt;code&gt;0xFFF&lt;/code&gt;と記述することができ、これを出力すると&lt;code&gt;4095&lt;/code&gt;になります。&lt;/p&gt;&#xA;&lt;h1 id=&#34;数値の計算&#34;&gt;数値の計算&lt;/h1&gt;&#xA;&lt;p&gt;数値は演算子を使って計算することができます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>文字列について</title>
      <link>https://godot-japan.com/reference/gdscript%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/%E6%96%87%E5%AD%97%E5%88%97%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://godot-japan.com/reference/gdscript%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/%E6%96%87%E5%AD%97%E5%88%97%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>&lt;h1 id=&#34;文字列の基本&#34;&gt;文字列の基本&lt;/h1&gt;&#xA;&lt;p&gt;文字列は非常に単純なデータ型であり、コピーオンライトという方式が取られています。&lt;br&gt;&#xA;参照渡しができない型の場合、他の変数に渡すとすぐに複製されますが、Godot Engineの場合、渡された時点では参照渡しであり、変更があった場合に複製されます。&lt;br&gt;&#xA;つまり、変更がない場合は複製されないのでメモリの節約になります。&lt;/p&gt;&#xA;&lt;p&gt;また、Godot Engineでは文字列を加工するメソッドが多数用意されています。&lt;/p&gt;&#xA;&lt;h2 id=&#34;文字コードについて&#34;&gt;文字コードについて&lt;/h2&gt;&#xA;&lt;p&gt;Godot EngineはUnicodeをサポートしています。&lt;/p&gt;&#xA;&lt;h1 id=&#34;文字列の作成方法&#34;&gt;文字列の作成方法&lt;/h1&gt;&#xA;&lt;p&gt;文字列を作成するには、文字列リテラルを使用し、ダブルクォーテーション&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;でくくります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value :&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;あいうえお&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# あいうえお&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;文字列の中でダブルクォーテーションを使う&#34;&gt;文字列の中でダブルクォーテーションを使う&lt;/h2&gt;&#xA;&lt;p&gt;文字列リテラルでダブルクォーテーションを使用しているため、文字列内にダブルクォーテーションを使用することができません。&lt;br&gt;&#xA;その場合、エスケープ文字を使い、&lt;code&gt;\&amp;quot;&lt;/code&gt;と記述します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value :&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;かきくけこ&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#34;かきくけこ&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;他の型を文字列に変換する&#34;&gt;他の型を文字列に変換する&lt;/h2&gt;&#xA;&lt;p&gt;ほとんどの型を&lt;code&gt;String&lt;/code&gt;に変換することができますが、&lt;code&gt;String&lt;/code&gt;クラスで変換するわけではありません。&lt;br&gt;&#xA;&lt;code&gt;String(100)&lt;/code&gt;などとするとエラーが出ます。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;str(100)&#xA;var_to_str(100)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;文字列の処理&#34;&gt;文字列の処理&lt;/h1&gt;&#xA;&lt;h2 id=&#34;文字列を連結する&#34;&gt;文字列を連結する&lt;/h2&gt;&#xA;&lt;p&gt;連結演算子&lt;code&gt;+&lt;/code&gt;または&lt;code&gt;+=&lt;/code&gt;を使用して、複数の文字列を連結します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value :&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;あいう&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;え&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# あいうえ&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;お&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# あいうえお&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;他の型と文字列を連結する&#34;&gt;他の型と文字列を連結する&lt;/h3&gt;&#xA;&lt;p&gt;他の型と連結する場合は、どちらも文字列に揃える必要があります。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value :&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;あいうえお&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; str(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(value) &lt;span style=&#34;color:#75715e&#34;&gt;# あいうえお100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;文字列同士を比較する&#34;&gt;文字列同士を比較する&lt;/h2&gt;&#xA;&lt;p&gt;文字列が同じかどうかを比較する場合、&lt;code&gt;==&lt;/code&gt;等価演算子を使用することができます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;あいう&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;あいう&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;また、文字コードの大小を、&lt;code&gt;&amp;lt;&lt;/code&gt;または&lt;code&gt;&amp;gt;&lt;/code&gt;の比較演算子を使用することで判別できます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;あ&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;い&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;う&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;い&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;文字列を数える&#34;&gt;文字列を数える&lt;/h2&gt;&#xA;&lt;p&gt;文字列を数えるメソッドをご紹介します。&lt;/p&gt;&#xA;&lt;h3 id=&#34;文字列の長さを数える&#34;&gt;文字列の長さを数える&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;あいうえお&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(value&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;()) &lt;span style=&#34;color:#75715e&#34;&gt;# 5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;文字列の出現回数を数える&#34;&gt;文字列の出現回数を数える&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ねこねここねこ&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(value&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;こ&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;# 4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;文字列の途中から、または途中までなどの範囲で探すことも可能です。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
